package com.adserversoft.flexfuse.client.model.vo {
import com.adserversoft.flexfuse.client.model.ApplicationConstants;

[Bindable]
[RemoteClass(alias="com.adserversoft.flexfuse.server.api.Banner")]
public dynamic class BannerVO extends BaseVO {
    public var id:Object;// created by the database

    public static var counter:int = 1;

    public var uid:String;// id generated by client
    public var parentUid:String; // if created as a result of dragging, parentUid is set
    public var adPlaceUid:String;// if dragged to an ad place, adPlaceUid is set

    public var targetUrl:String = "http://www.";

    public var bannerName:String;
    public var bannerContentTypeId:int;
    public var fileSize:int;
    public var filename:String;

    private var _views:int;
    private var _clicks:int;
    public var ctr:String;
    public var priority:int = -1;

    public var ongoing:Boolean = true;
    public var startDate:Date;
    public var endDate:Date;

    public var hourBits:String;
    public var dayBits:String;
    public var countryBits:String;

    public var adFormatId:int;
    public var bannerState:int = ApplicationConstants.STATE_ACTIVE;

    public var trafficShare:int;

    public var isBannerFileChanged:Boolean = false;

    public var dailyViewsLimit:int;//Daily views limit
    public var maxNumberViews:int;//Maximum number of views for the whole display period

    public function BannerVO() {
        adFormat = ApplicationConstants.sortedAdFormatsCollection.getItemAt(0) as AdFormatVO;
        bannerName = "new banner " + counter++;
        trafficShare = 100;
        views = 0;
        clicks = 0;
        ctr = String((views == 0) ? 0 : Math.round(((clicks / views) * 100) * 100) / 100) + "%";
    }

    public function get adFormat():AdFormatVO {
        return ApplicationConstants.AD_FORMATS.getValue(adFormatId);
    }

    public function set adFormat(af:AdFormatVO):void {
        this.adFormatId = af.id;
    }

    public function get fileSizeString():String {
        var stringFileSize:String = "" + Math.round(fileSize / 1024 * 100) / 100;
        if (stringFileSize.indexOf(".") == -1) {
            stringFileSize += ".00";
        } else if (stringFileSize.substring(stringFileSize.indexOf(".") + 1).length == 1) {
            stringFileSize += "0";
        }
        return stringFileSize.replace(".", ",") + " Kb";
    }

    public function set fileSizeString(s:String):void {
        trace(s);
    }

    public function get adFormatName():String {
        return adFormat.adFormatName;
    }

    public function get shortAdFormatName():String {
        return "" + adFormat.width + "x" + adFormat.height;
    }

    public function get views():int {
        return _views;
    }

    public function set views(v:int):void {
        _views = v;
        ctr = String((views == 0) ? 0 : Math.round(((clicks / views) * 100) * 100) / 100) + "%";
    }

    public function get clicks():int {
        return _clicks;
    }

    public function set clicks(v:int):void {
        _clicks = v;
        ctr = String((views == 0) ? 0 : Math.round(((clicks / views) * 100) * 100) / 100) + "%";
    }


    public function isAllBitsSelected(bits:String):Boolean {
        return bits.search('0') == -1;
    }

    public function mergeProperties(banner:BannerVO):void {
        id = banner.id;
        uid = banner.uid;
        parentUid = banner.parentUid;
        adPlaceUid = banner.adPlaceUid;
        targetUrl = banner.targetUrl;
        bannerName = banner.bannerName;
        bannerContentTypeId = banner.bannerContentTypeId;
        fileSize = banner.fileSize;
        filename = banner.filename;
        views = banner.views;
        clicks = banner.clicks;
        priority = banner.priority;
        ongoing = banner.ongoing;
        startDate = banner.startDate;
        endDate = banner.endDate;
        hourBits = banner.hourBits;
        dayBits = banner.dayBits;
        adFormatId = banner.adFormatId;
        bannerState = banner.bannerState;
        isBannerFileChanged = banner.isBannerFileChanged;
        dailyViewsLimit = banner.dailyViewsLimit;
        maxNumberViews = banner.maxNumberViews;
        trafficShare = banner.trafficShare;
    }

    public function get isAdFormatEnabled():Boolean {
        return adPlaceUid == null;
    }
}
}
